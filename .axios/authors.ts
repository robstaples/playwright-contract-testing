/**
 * Generated by orval v6.26.0 üç∫
 * Do not edit manually.
 * FakeRESTApi.Web V1
 * OpenAPI spec version: v1
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  Author
} from './types'




  export const getApiV1Authors = <TData = AxiosResponse<Author[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/Authors`,options
    );
  }
export const postApiV1Authors = <TData = AxiosResponse<Author>>(
    author: Author, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/v1/Authors`,
      author,options
    );
  }
export const getApiV1AuthorsAuthorsBooksIdBook = <TData = AxiosResponse<Author[]>>(
    idBook: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/Authors/authors/books/${idBook}`,options
    );
  }
export const getApiV1AuthorsId = <TData = AxiosResponse<Author>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/Authors/${id}`,options
    );
  }
export const putApiV1AuthorsId = <TData = AxiosResponse<Author>>(
    id: number,
    author: Author, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/api/v1/Authors/${id}`,
      author,options
    );
  }
export const deleteApiV1AuthorsId = <TData = AxiosResponse<void>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/api/v1/Authors/${id}`,options
    );
  }
export type GetApiV1AuthorsResult = AxiosResponse<Author[]>
export type PostApiV1AuthorsResult = AxiosResponse<Author>
export type GetApiV1AuthorsAuthorsBooksIdBookResult = AxiosResponse<Author[]>
export type GetApiV1AuthorsIdResult = AxiosResponse<Author>
export type PutApiV1AuthorsIdResult = AxiosResponse<Author>
export type DeleteApiV1AuthorsIdResult = AxiosResponse<void>
